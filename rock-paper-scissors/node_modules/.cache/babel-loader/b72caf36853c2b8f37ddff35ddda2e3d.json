{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Ben\\\\Desktop\\\\RockPaperScissor(React)\\\\rock-paper-scissors\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ben\\\\Desktop\\\\RockPaperScissor(React)\\\\rock-paper-scissors\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Ben\\\\Desktop\\\\RockPaperScissor(React)\\\\rock-paper-scissors\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Ben\\\\Desktop\\\\RockPaperScissor(React)\\\\rock-paper-scissors\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Desktop\\\\RockPaperScissor(React)\\\\rock-paper-scissors\\\\src\\\\index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Player from \"./player\";\nimport \"./styles.css\";\nvar moves = [\"rock\", \"paper\", \"scissors\"];\nvar modes = [\"bestOf3\", \"bestOf5\"];\nvar types = [\"random\", \"tactical\"];\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      player: moves[0],\n      //Keep track of player selection\n      computer: moves[0],\n      //Keep track of computer selection\n      lastChoice: moves[0],\n      //Keep track of computer's last selection\n      mode: modes[0],\n      // Keep track of mode(i.e how many rounds)\n      type: types[0],\n      // keep track of Computer type\n      playerScore: 0,\n      // keep track of Player's Score\n      computerScore: 0,\n      // keep track of Computer's Score\n      round: 0,\n      nextBest: \"\",\n      winner: \"\"\n    };\n\n    _this.startGame = function () {\n      var counter = 0;\n      var gameInterval = setInterval(function () {\n        counter++;\n\n        if (_this.type === \"tactical\") {\n          _this.nextBest = _this.selectNextBestMove();\n\n          _this.playTactical(); //Play tactically\n\n        } else {\n          _this.lastChoice = _this.playRandom(); //Play random for Computer\n        }\n\n        if (counter > 5) {\n          clearInterval(gameInterval);\n\n          _this.setState({\n            winner: _this.selectWinner()\n          });\n        }\n      }, 100);\n    };\n\n    _this.selectMode = function (mode) {\n      var round = 0;\n\n      if (mode === \"bestOf3\") {\n        round = 3;\n      } else if (mode === \"bestOf5\") {\n        round = 5;\n      } else {\n        return \"Select Mode\";\n      }\n\n      _this.setState({\n        mode: mode,\n        round: round,\n        playerScore: 0,\n        computerScore: 0\n      });\n    };\n\n    _this.selectType = function (type) {\n      if (type === \"tactical\") {\n        type = \"tactical\";\n      } else {\n        type = \"random\";\n      }\n\n      _this.setState({\n        type: type,\n        playerScore: 0,\n        computerScore: 0\n      });\n    };\n\n    _this.selectWinner = function (playerScore, computerScore) {\n      var _this$state = _this.state,\n          player = _this$state.player,\n          computer = _this$state.computer;\n\n      if (player === computer) {\n        return \"It's a Draw!\";\n      } else if (player === \"rock\" && computer === \"scissors\" || player === \"scissors\" && computer === \"paper\" || player === \"paper\" && computer === \"rock\") {\n        _this.updatePlayerScore();\n\n        return \"Player!\";\n      } else {\n        _this.updateComputerScore(1);\n\n        return \"Computer!\";\n      }\n    };\n\n    _this.selectMove = function (move) {\n      _this.setState({\n        player: move,\n        winner: \"\"\n      });\n    };\n\n    _this.playRandom = function () {\n      var move = \"\";\n      var next = \"\";\n      move = moves[Math.floor(Math.random() * moves.length)];\n      _this.lastChoice = move;\n\n      _this.setState({\n        computer: move,\n        lastChoice: _this.lastChoice\n      });\n    };\n\n    _this.playTactical = function () {\n      var move = \"\",\n          nextBest = \"\";\n      nextBest = _this.selectNextBestMove();\n      move = nextBest; //Play next Best //this.playTactical(this.lastChoice)\n\n      _this.lastChoice = move;\n\n      _this.setState({\n        computer: move,\n        lastChoice: _this.lastChoice,\n        nextBest: nextBest\n      });\n    };\n\n    _this.updatePlayerScore = function () {// this.setState((preState) => {\n      //   return {\n      //     playerScore : preState.playerScore + 1\n      //     };\n      //   this.setState((prevState, props) => ({\n      //     playerScore: prevState.playerScore + 1\n      // })); \n    };\n\n    _this.updateComputerScore = function (step) {\n      var computerScore = _this.state.computerScore + step;\n\n      _this.setState({\n        computerScore: computerScore\n      });\n    };\n\n    _this.updateNextBest = function (nextBest) {\n      _this.setState({\n        nextBest: nextBest\n      });\n    };\n\n    _this.selectNextBestMove = function () {\n      var lastChoice = _this.state.lastChoice;\n\n      switch (lastChoice) {\n        case 'rock':\n          _this.updateNextBest(\"paper\");\n\n          return 'paper';\n\n        case 'paper':\n          _this.updateNextBest(\"scissors\");\n\n          return 'scissors';\n\n        case 'scissors':\n          _this.updateNextBest(\"rock\");\n\n          return 'rock';\n\n        default:\n          return _this.playRandom();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          player = _this$state2.player,\n          computer = _this$state2.computer,\n          winner = _this$state2.winner;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }\n      }, \"Rock Paper Scissors\"), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"gamesetting\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"moveBtn\",\n        onClick: function onClick() {\n          return _this2.selectType(\"random\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }\n      }, \"Random\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"moveBtn\",\n        onClick: function onClick() {\n          return _this2.selectType(\"tactical\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }\n      }, \"Tactical AI\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"moveBtn\",\n        onClick: function onClick() {\n          return _this2.selectMode(\"bestOf3\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }\n      }, \"Best Of 3\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"moveBtn\",\n        onClick: function onClick() {\n          return _this2.selectMode(\"bestOf5\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }\n      }, \"Best Of 5\")), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Player, {\n        move: player,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Player, {\n        move: computer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"moveBtn\",\n        onClick: function onClick() {\n          return _this2.selectMove(\"rock\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }\n      }, \"rock\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"moveBtn\",\n        onClick: function onClick() {\n          return _this2.selectMove(\"paper\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }\n      }, \"paper\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"moveBtn\",\n        onClick: function onClick() {\n          return _this2.selectMove(\"scissors\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }\n      }, \"scissor\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"winner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 9\n        }\n      }, \"Winner: \", winner ? this.selectWinner(this.playerScore, this.computerScore) : null), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.startGame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 9\n        }\n      }, \"Play!\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["C:/Users/Ben/Desktop/RockPaperScissor(React)/rock-paper-scissors/src/index.js"],"names":["React","Component","ReactDOM","Player","moves","modes","types","App","state","player","computer","lastChoice","mode","type","playerScore","computerScore","round","nextBest","winner","startGame","counter","gameInterval","setInterval","selectNextBestMove","playTactical","playRandom","clearInterval","setState","selectWinner","selectMode","selectType","updatePlayerScore","updateComputerScore","selectMove","move","next","Math","floor","random","length","step","updateNextBest","textAlign","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Player from \"./player\";\nimport \"./styles.css\";\n\nconst moves = [\"rock\", \"paper\", \"scissors\"];\nconst modes = [\"bestOf3\", \"bestOf5\"];\nconst types = [\"random\", \"tactical\"];\n\nclass App extends Component {\n  state = { \n    player: moves[0], //Keep track of player selection\n    computer: moves[0], //Keep track of computer selection\n    lastChoice: moves[0], //Keep track of computer's last selection\n    mode: modes[0], // Keep track of mode(i.e how many rounds)\n    type: types[0], // keep track of Computer type\n    playerScore: 0, // keep track of Player's Score\n    computerScore: 0, // keep track of Computer's Score\n    round:0,\n    nextBest:\"\",\n    winner: \"\"\n  };\n\n  startGame = () => {\n    let counter = 0;\n    let gameInterval = setInterval(() => {\n      counter++;\n      if(this.type === \"tactical\"){\n        this.nextBest = this.selectNextBestMove()\n        this.playTactical() //Play tactically\n      }else{\n        this.lastChoice = this.playRandom() //Play random for Computer\n      }\n      if (counter > 5) {\n        clearInterval(gameInterval);\n        this.setState({\n          winner: this.selectWinner()\n        });\n      }\n    }, 100);\n  };\n\n  //selectMode\n  selectMode = mode => {\n    let round = 0;\n    if (mode === \"bestOf3\"){\n      round = 3;\n    }else if(mode === \"bestOf5\"){\n      round = 5;\n    }else{\n      return \"Select Mode\"\n    }\n    this.setState({\n      mode: mode,\n      round: round,\n      playerScore: 0,\n      computerScore: 0\n    });\n  };\n  //select Computer Type\n  selectType = type => {\n    if(type ===\"tactical\"){\n      type = \"tactical\"\n    }else{\n      type = \"random\"\n    }\n    this.setState({\n      type: type,\n      playerScore: 0,\n      computerScore: 0\n      });\n  };\n  selectWinner = (playerScore, computerScore) => {\n    const { player, computer,  } = this.state;\n\n    if (player === computer) {\n      return \"It's a Draw!\";\n    } else if (\n      (player === \"rock\" && computer === \"scissors\") ||\n      (player === \"scissors\" && computer === \"paper\") ||\n      (player === \"paper\" && computer === \"rock\")\n    ) {\n      this.updatePlayerScore()\n      return \"Player!\";\n    } else {\n      this.updateComputerScore(1)\n      return \"Computer!\";\n    }\n  };\n  selectMove = move => {\n    this.setState({\n      player: move,\n      winner: \"\"\n    });\n  };\n  //playRandom\n  playRandom = () =>{\n    let move =\"\"\n    let next=\"\"\n    move = moves[Math.floor(Math.random() * moves.length)]\n    this.lastChoice = move\n    this.setState({\n      computer: move,\n      lastChoice: this.lastChoice,\n    });\n  }\n  playTactical = () =>{\n    let move =\"\", nextBest =\"\"\n    nextBest = this.selectNextBestMove()\n    move = nextBest //Play next Best //this.playTactical(this.lastChoice)\n    this.lastChoice = move\n    this.setState({\n      computer: move,\n      lastChoice: this.lastChoice,\n      nextBest: nextBest\n    });\n  }\n  // update Player Score\n  updatePlayerScore = () => {\n    // this.setState((preState) => {\n    //   return {\n    //     playerScore : preState.playerScore + 1\n    //     };\n    //   this.setState((prevState, props) => ({\n    //     playerScore: prevState.playerScore + 1\n    // })); \n\n  }\n  \n\n  // update Computers Score\n  updateComputerScore = (step) => {\n    let  computerScore = this.state.computerScore + step;\n    this.setState({\n      computerScore: computerScore,\n      });\n  }\n\n  //update next Best\n  updateNextBest = (nextBest) => {\n    this.setState({ nextBest: nextBest});\n  }\n  //selectNextBestMove\n  selectNextBestMove = () => {\n    const {  lastChoice } = this.state;\n\n    switch(lastChoice) {\n      case 'rock':\n        this.updateNextBest(\"paper\")\n        return 'paper';\n      case 'paper':\n        this.updateNextBest(\"scissors\")\n        return 'scissors';\n      case 'scissors':\n        this.updateNextBest(\"rock\")\n        return 'rock';\n      default:\n        return this.playRandom();\n    }\n  };\n  render() {\n    const { player, computer, winner } = this.state;\n    return (\n      <>\n        <h1 style={{ textAlign: \"center\" }}>Rock Paper Scissors</h1>\n        <div class=\"gamesetting\">\n        <button\n            className=\"moveBtn\"\n            onClick={() => this.selectType(\"random\")}\n          >\n            Random\n          </button>\n        <button\n            className=\"moveBtn\"\n            onClick={() => this.selectType(\"tactical\")}\n          >\n            Tactical AI\n          </button>\n          <button\n            className=\"moveBtn\"\n            onClick={() => this.selectMode(\"bestOf3\")}\n          >\n            Best Of 3\n          </button>\n          <button\n            className=\"moveBtn\"\n            onClick={() => this.selectMode(\"bestOf5\")}\n          >\n            Best Of 5\n          </button>\n\n        </div>\n        <div>\n          <Player move={player} />\n          <Player move={computer} />\n        </div>\n        <div>\n          <button\n            className=\"moveBtn\"\n            onClick={() => this.selectMove(\"rock\")}\n          >\n            rock\n          </button>\n          <button\n            className=\"moveBtn\"\n            onClick={() => this.selectMove(\"paper\")}\n          >\n            paper\n          </button>\n          <button\n            className=\"moveBtn\"\n            onClick={() => this.selectMove(\"scissors\")}\n          >\n            scissor\n          </button>\n        </div>\n        <div className=\"winner\">Winner: {winner ? this.selectWinner(this.playerScore, this.computerScore) : null}</div>\n        <button type=\"button\" onClick={this.startGame}>\n          Play!\n        </button>\n      </>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}