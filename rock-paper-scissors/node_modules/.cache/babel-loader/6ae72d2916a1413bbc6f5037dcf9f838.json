{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Ben\\\\Desktop\\\\RockPaperScissor(React)\\\\rock-paper-scissors\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ben\\\\Desktop\\\\RockPaperScissor(React)\\\\rock-paper-scissors\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Ben\\\\Desktop\\\\RockPaperScissor(React)\\\\rock-paper-scissors\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Ben\\\\Desktop\\\\RockPaperScissor(React)\\\\rock-paper-scissors\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Desktop\\\\RockPaperScissor(React)\\\\rock-paper-scissors\\\\src\\\\index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Player from \"./player\";\nimport \"./styles.css\";\nimport paper from \"./assets/paper.png\";\nimport rock from \"./assets/rock.png\";\nimport scissors from \"./assets/scissors.png\";\nvar moves = [\"rock\", \"paper\", \"scissors\"];\nvar modes = [\"bestOf3\", \"bestOf5\"];\nvar types = [\"random\", \"tactical\"];\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      player: moves[0],\n      //Keep track of player selection\n      computer: moves[0],\n      //Keep track of computer selection\n      lastChoice: moves[0],\n      //Keep track of computer's last selection\n      mode: modes[0],\n      // Keep track of mode(i.e how many rounds)\n      type: types[0],\n      // keep track of Computer type\n      playerScore: 0,\n      // keep track of Player's Score\n      computerScore: 0,\n      // keep track of Computer's Score\n      round: 3,\n      //default is Best of 3\n      nextBest: \"\",\n      winner: \"\",\n      finalWinner: \"\"\n    };\n\n    _this.startGame = function () {\n      var counter = 0,\n          rounds = 3;\n      var gameInterval = setInterval(function () {\n        if (_this.state.type === \"tactical\") {\n          // this.nextBest = this.selectNextBestMove(this.lastChoice)\n          _this.playTactical(); //Play tactically\n\n        }\n\n        if (_this.state.type === \"random\") {\n          _this.lastChoice = _this.playRandom(); //Play random for Computer\n        }\n\n        rounds = _this.state.round;\n\n        _this.setState({\n          winner: _this.selectWinner()\n        });\n\n        _this.scoreWinner();\n\n        _this.checkRounds();\n\n        _this.displayWinner();\n\n        clearInterval(gameInterval);\n      }, 100);\n    };\n\n    _this.selectMode = function (mode) {\n      var round = 0;\n\n      if (mode === \"bestOf3\") {\n        round = 3;\n      } else if (mode === \"bestOf5\") {\n        round = 5;\n      } else {\n        return \"Select Mode\";\n      }\n\n      _this.setState({\n        mode: mode,\n        round: round,\n        playerScore: 0,\n        computerScore: 0,\n        // nextBest:\"\",\n        lastChoice: \"\"\n      });\n    };\n\n    _this.selectType = function (type) {\n      if (type === \"tactical\") {\n        type = \"tactical\";\n      } else {\n        type = \"random\";\n      }\n\n      _this.setState({\n        type: type,\n        playerScore: 0,\n        computerScore: 0,\n        // nextBest:\"\",\n        lastChoice: \"\",\n        round: 3 //default of 3\n\n      });\n    };\n\n    _this.selectWinner = function () {\n      var _this$state = _this.state,\n          player = _this$state.player,\n          computer = _this$state.computer;\n\n      if (player === computer) {\n        return \"It's a Draw!\";\n      } else if (player === \"rock\" && computer === \"scissors\" || player === \"scissors\" && computer === \"paper\" || player === \"paper\" && computer === \"rock\") {\n        return \"Player\";\n      } else {\n        return \"Computer\";\n      }\n    };\n\n    _this.scoreWinner = function () {\n      var winner = _this.state.winner;\n\n      if (winner === \"Player\") {\n        _this.updatePlayerScore(1);\n      } else if (winner === \"Computer\") {\n        _this.updateComputerScore(1);\n      } else {\n        return \"No winner\";\n      }\n    };\n\n    _this.displayWinner = function () {\n      var _this$state2 = _this.state,\n          playerScore = _this$state2.playerScore,\n          computerScore = _this$state2.computerScore;\n\n      if (_this.state.round == 0) {\n        if (playerScore > computerScore) {\n          return \"Player Wins the Game\";\n        } else if (playerScore === computerScore) {\n          return \"This Game has no Winner!\";\n        } else {\n          return \"Computer Wins the Game\";\n        }\n      }\n    };\n\n    _this.selectMove = function (move) {\n      _this.setState({\n        player: move,\n        winner: \"\"\n      });\n    };\n\n    _this.checkRounds = function () {\n      if (_this.state.round >= 0) {\n        _this.setState({\n          round: _this.state.round - 1\n        });\n      } else {\n        _this.setState({\n          round: 0\n        });\n      }\n    };\n\n    _this.playRandom = function () {\n      var move = \"\";\n      move = moves[Math.floor(Math.random() * moves.length)];\n      _this.lastChoice = move;\n      var next = \"\";\n      next = _this.selectNextBestMove(_this.lastChoice);\n      console.log(next);\n\n      _this.setState({\n        computer: move,\n        lastChoice: _this.lastChoice,\n        nextBest: next\n      });\n    };\n\n    _this.playTactical = function () {\n      console.log('playing tactical'); //const {  lastChoice, nextBest } = this.state;\n\n      var move = \"\",\n          lastChoice = _this.state.lastChoice,\n          nextBest = _this.state.nextBest;\n\n      if (lastChoice === \"\") {\n        move = moves[Math.floor(Math.random() * moves.length)];\n      } else {\n        move = nextBest; //Play next Best \n      }\n\n      lastChoice = move; //update last choice\n\n      nextBest = _this.selectNextBestMove(lastChoice); // update next best\n\n      _this.setState({\n        computer: move,\n        lastChoice: lastChoice,\n        nextBest: nextBest\n      });\n    };\n\n    _this.updatePlayerScore = function (step) {\n      var playerScore = _this.state.playerScore;\n\n      _this.setState({\n        playerScore: playerScore + step\n      });\n    };\n\n    _this.updateComputerScore = function (step) {\n      var computerScore = _this.state.computerScore;\n\n      _this.setState({\n        computerScore: computerScore + step\n      });\n    };\n\n    _this.updateNextBest = function (nextBest) {\n      _this.setState({\n        nextBest: nextBest\n      });\n    };\n\n    _this.selectNextBestMove = function (lastChoice) {\n      // const {  lastChoice } = this.state;\n      switch (lastChoice) {\n        case 'rock':\n          _this.updateNextBest(\"paper\");\n\n          return 'paper';\n\n        case 'paper':\n          _this.updateNextBest(\"scissors\");\n\n          return 'scissors';\n\n        case 'scissors':\n          _this.updateNextBest(\"rock\");\n\n          return 'rock';\n\n        case '':\n          return moves[Math.floor(Math.random() * moves.length)];\n\n        default:\n          return moves[Math.floor(Math.random() * moves.length)];\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _this$displayWinner;\n\n      var playerMove = this.state.player;\n      var computerMove = this.state.computer;\n      var _this$state3 = this.state,\n          player = _this$state3.player,\n          computer = _this$state3.computer,\n          winner = _this$state3.winner,\n          final = _this$state3.final,\n          playerScore = _this$state3.playerScore,\n          computerScore = _this$state3.computerScore;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"header\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 9\n        }\n      }, \"Rock Paper Scissors.com\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sys_msg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 34\n        }\n      }, \"Please select Computer Type and preferred number of Round to Begin\")), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"gamesetting\",\n        style: {\n          display: \"flex\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          marginLeft: 0,\n          backgroundColor: \"orange\"\n        },\n        className: \"moveBtn\",\n        onClick: function onClick() {\n          return _this2.selectType(\"random\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 9\n        }\n      }, \"Random\"), /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          marginLeft: 0,\n          backgroundColor: \"Red\"\n        },\n        className: \"moveBtn\",\n        onClick: function onClick() {\n          return _this2.selectType(\"tactical\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }\n      }, \"Tactical AI\"), /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          marginLeft: 200,\n          backgroundColor: \"green\"\n        },\n        className: \"moveBtn\",\n        onClick: function onClick() {\n          return _this2.selectMode(\"bestOf3\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }\n      }, \"Best Of 3\"), /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          marginLeft: \"auto\",\n          backgroundColor: \"blue\"\n        },\n        className: \"moveBtn\",\n        onClick: function onClick() {\n          return _this2.selectMode(\"bestOf5\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }\n      }, \"Best Of 5\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"round\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 9\n        }\n      }, \" Rounds: \", this.state.round, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"result\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"playerMove\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }\n      }, \"player:\", /*#__PURE__*/React.createElement(\"div\", {\n        className: playerMove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 31\n        }\n      }, \"Vs\")), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"computerMove\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }\n      }, this.state.type, \" computer:\", /*#__PURE__*/React.createElement(\"div\", {\n        className: computerMove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"winner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 9\n        }\n      }, \"Match Winner: \", winner ? this.selectWinner() : null), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"finalWin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 9\n        }\n      }, \"Game Winner: \", (_this$displayWinner = this.displayWinner()) !== null && _this$displayWinner !== void 0 ? _this$displayWinner : null), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        class: \"column\",\n        className: \"moveBtn\",\n        onClick: function onClick() {\n          return _this2.selectMove(\"rock\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 9\n        }\n      }, \"rock\"), /*#__PURE__*/React.createElement(\"button\", {\n        class: \"column\",\n        className: \"moveBtn\",\n        onClick: function onClick() {\n          return _this2.selectMove(\"paper\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }\n      }, \"paper\"), /*#__PURE__*/React.createElement(\"button\", {\n        class: \"column\",\n        className: \"moveBtn\",\n        onClick: function onClick() {\n          return _this2.selectMove(\"scissors\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }\n      }, \"scissor\"), /*#__PURE__*/React.createElement(\"button\", {\n        style: {\n          marginLeft: 400,\n          marginTop: -50,\n          backgroundColor: \"Green\"\n        },\n        type: \"button\",\n        onClick: this.startGame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }\n      }, \"Play!\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["C:/Users/Ben/Desktop/RockPaperScissor(React)/rock-paper-scissors/src/index.js"],"names":["React","Component","ReactDOM","Player","paper","rock","scissors","moves","modes","types","App","state","player","computer","lastChoice","mode","type","playerScore","computerScore","round","nextBest","winner","finalWinner","startGame","counter","rounds","gameInterval","setInterval","playTactical","playRandom","setState","selectWinner","scoreWinner","checkRounds","displayWinner","clearInterval","selectMode","selectType","updatePlayerScore","updateComputerScore","selectMove","move","Math","floor","random","length","next","selectNextBestMove","console","log","step","updateNextBest","playerMove","computerMove","final","textAlign","display","marginLeft","backgroundColor","marginTop","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Player from \"./player\";\nimport \"./styles.css\";\nimport paper from \"./assets/paper.png\";\nimport rock from \"./assets/rock.png\";\nimport scissors from \"./assets/scissors.png\";\n\n\nconst moves = [\"rock\", \"paper\", \"scissors\"];\nconst modes = [\"bestOf3\", \"bestOf5\"];\nconst types = [\"random\", \"tactical\"];\n\nclass App extends Component {\n  state = { \n    player: moves[0], //Keep track of player selection\n    computer: moves[0], //Keep track of computer selection\n    lastChoice: moves[0], //Keep track of computer's last selection\n    mode: modes[0], // Keep track of mode(i.e how many rounds)\n    type: types[0], // keep track of Computer type\n    playerScore: 0, // keep track of Player's Score\n    computerScore: 0, // keep track of Computer's Score\n    round:3, //default is Best of 3\n    nextBest:\"\",\n    winner: \"\",\n    finalWinner: \"\",\n  };\n\n  startGame = () => {\n    let counter = 0, rounds =3\n    let gameInterval = setInterval(() => {\n\n      if (this.state.type === \"tactical\"){\n       // this.nextBest = this.selectNextBestMove(this.lastChoice)\n        this.playTactical() //Play tactically\n      }\n      if (this.state.type === \"random\"){\n        this.lastChoice = this.playRandom() //Play random for Computer\n      }\n      rounds = this.state.round\n      this.setState({\n        winner: this.selectWinner()\n      });\n      this.scoreWinner()\n      this.checkRounds()\n      this.displayWinner()\n      clearInterval(gameInterval);\n    }, 100);\n  };\n\n  //selectMode\n  selectMode = mode => {\n    let round = 0;\n    if (mode === \"bestOf3\"){\n      round = 3;\n    }else if(mode === \"bestOf5\"){\n      round = 5;\n    }else{\n      return \"Select Mode\"\n    }\n    this.setState({\n      mode: mode,\n      round: round,\n      playerScore: 0,\n      computerScore: 0,\n      // nextBest:\"\",\n      lastChoice:\"\"\n    });\n  };\n  //select Computer Type\n  selectType = type => {\n    if(type ===\"tactical\"){\n      type = \"tactical\"\n    }else{\n      type = \"random\"\n    }\n    this.setState({\n      type: type,\n      playerScore: 0,\n      computerScore: 0,\n      // nextBest:\"\",\n      lastChoice:\"\",\n      round: 3 //default of 3\n      });\n  };\n  selectWinner = () => {\n    const { player, computer,  } = this.state;\n\n    if (player === computer) {\n      return \"It's a Draw!\";\n    } else if (\n      (player === \"rock\" && computer === \"scissors\") ||\n      (player === \"scissors\" && computer === \"paper\") ||\n      (player === \"paper\" && computer === \"rock\")\n    ) {\n      return \"Player\";\n    } else {\n      return \"Computer\";\n    }\n  };\n\n  scoreWinner = () => {\n    const { winner } = this.state;\n    if(winner === \"Player\" ){\n      this.updatePlayerScore(1)\n    }else if( winner === \"Computer\"){\n      this.updateComputerScore(1)\n    }else{\n      return \"No winner\"\n    }\n  };\n\n  displayWinner = () =>{\n    const { playerScore, computerScore } = this.state;\n    if(this.state.round == 0){\n      if(playerScore > computerScore){\n        return \"Player Wins the Game\"\n      }else if(playerScore === computerScore){\n        return \"This Game has no Winner!\"\n      }else{\n        return \"Computer Wins the Game\"\n      }\n    }\n    \n  }\n  selectMove = move => {\n    this.setState({\n      player: move,\n      winner: \"\"\n    });\n  };\n  //checkRounds\n  checkRounds = () => {\n    if(this.state.round >= 0){\n      this.setState({\n      round: this.state.round -1\n    });\n    }else{\n      this.setState({\n        round: 0\n      });\n    }\n  };\n  //playRandom\n  playRandom = () =>{\n    let move =\"\"\n    move = moves[Math.floor(Math.random() * moves.length)]\n    this.lastChoice = move\n    let next=\"\"\n    next = this.selectNextBestMove(this.lastChoice)\n    console.log(next)\n    this.setState({\n      computer: move,\n      lastChoice: this.lastChoice,\n      nextBest: next\n    });\n  }\n  playTactical = () =>{\n    console.log('playing tactical')\n    //const {  lastChoice, nextBest } = this.state;\n    let move =\"\",lastChoice=this.state.lastChoice, nextBest=this.state.nextBest\n    if(lastChoice ===\"\"){\n      move =moves[Math.floor(Math.random() * moves.length)];\n    }else{\n      move = nextBest //Play next Best \n    }\n\n    lastChoice = move //update last choice\n    nextBest = this.selectNextBestMove(lastChoice) // update next best\n    this.setState({\n      computer: move,\n      lastChoice: lastChoice,\n      nextBest: nextBest\n    });\n  }\n  // update Player Score\n  updatePlayerScore = (step) => {\n    let  playerScore = this.state.playerScore;\n    this.setState({\n      playerScore: playerScore + step,\n      });\n  }\n  // update Computers Score\n  updateComputerScore = (step) => {\n    let  computerScore = this.state.computerScore;\n    this.setState({\n      computerScore: computerScore + step,\n      });\n  }\n\n  //update next Best\n  updateNextBest = (nextBest) => {\n    this.setState({ nextBest: nextBest});\n  }\n  //selectNextBestMove\n  selectNextBestMove = (lastChoice) => {\n    // const {  lastChoice } = this.state;\n\n    switch(lastChoice) {\n      case 'rock':\n        this.updateNextBest(\"paper\")\n        return 'paper';\n      case 'paper':\n        this.updateNextBest(\"scissors\")\n        return 'scissors';\n      case 'scissors':\n        this.updateNextBest(\"rock\")\n        return 'rock';\n      case '':\n        return moves[Math.floor(Math.random() * moves.length)];\n      default:\n        return moves[Math.floor(Math.random() * moves.length)];\n    }\n  };\n  render() {\n    var playerMove = this.state.player;\n    var computerMove = this.state.computer;\n    const { player, computer, winner, final,  playerScore, computerScore } = this.state;\n    return (\n      <>\n        <div className=\"header\">\n        <header>\n        <h1 style={{ textAlign: \"center\" }}>Rock Paper Scissors.com</h1>\n        </header>\n        </div>\n        <div className=\"sys_msg\"><b>Please select Computer Type and preferred number of Round to Begin</b></div>\n        <div class=\"gamesetting\" style={{ display: \"flex\" }}>\n        <button\n            style={{ marginLeft: 0 , backgroundColor: \"orange\"}}\n\n            className=\"moveBtn\"\n            onClick={() => this.selectType(\"random\")}\n          >\n            Random\n          </button>\n        <button\n            style={{ marginLeft: 0 , backgroundColor: \"Red\"}}\n            className=\"moveBtn\"\n            onClick={() => this.selectType(\"tactical\")}\n          >\n            Tactical AI\n          </button>\n          <button\n            style={{ marginLeft: 200 , backgroundColor: \"green\"}}\n            className=\"moveBtn\"\n            onClick={() => this.selectMode(\"bestOf3\")}\n          >\n            Best Of 3\n          </button>\n          <button \n            style={{ marginLeft: \"auto\", backgroundColor: \"blue\"}}\n            className=\"moveBtn\"\n            onClick={() => this.selectMode(\"bestOf5\")}\n          >\n            Best Of 5\n          </button>\n        \n        </div>\n        <div className=\"round\"> Rounds: {this.state.round} </div>\n        <div class =\"result\">\n          <div class =\"playerMove\">\n          player:\n            <div className={playerMove}>\n            </div>\n          </div>\n          <div class=\"center\"><b>Vs</b></div>\n          <div class =\"computerMove\">\n    {this.state.type} computer:\n            <div className={computerMove}>\n            </div>\n          </div>\n        </div>\n        <div className=\"winner\">Match Winner: {winner ? this.selectWinner() : null}</div>\n        <div className=\"finalWin\">Game Winner: {this.displayWinner() ?? null}</div>\n       \n        <div className=\"footer\">\n        <button\n            class=\"column\"\n            className=\"moveBtn\"\n            onClick={() => this.selectMove(\"rock\")}\n          >\n            rock\n          </button>\n          <button\n            class=\"column\"\n            className=\"moveBtn\"\n            onClick={() => this.selectMove(\"paper\")}\n          >\n            paper\n          </button>\n          <button\n            class=\"column\"          \n            className=\"moveBtn\"\n            onClick={() => this.selectMove(\"scissors\")}\n          >\n            scissor\n          </button>\n          <button \n        style={{ marginLeft: 400, marginTop:-50, backgroundColor: \"Green\"}} type=\"button\" onClick={this.startGame}>\n          Play!\n        </button>\n    </div>\n\n\n      </>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}