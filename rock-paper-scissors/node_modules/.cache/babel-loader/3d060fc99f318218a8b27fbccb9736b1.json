{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Ben\\\\Desktop\\\\RockPaperScissor(React)\\\\rock-paper-scissors\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Ben\\\\Desktop\\\\RockPaperScissor(React)\\\\rock-paper-scissors\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Ben\\\\Desktop\\\\RockPaperScissor(React)\\\\rock-paper-scissors\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Ben\\\\Desktop\\\\RockPaperScissor(React)\\\\rock-paper-scissors\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ben\\\\Desktop\\\\RockPaperScissor(React)\\\\rock-paper-scissors\\\\src\\\\index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Player from \"./player\";\nimport \"./styles.css\";\nvar moves = [\"rock\", \"paper\", \"scissors\"];\nvar modes = [\"bestOf3\", \"bestOf5\"];\nvar types = [\"random\", \"tactical\"];\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      player: moves[0],\n      //Keep track of player selection\n      computer: moves[0],\n      //Keep track of computer selection\n      lastChoice: moves[0],\n      //Keep track of computer's last selection\n      mode: modes[0],\n      // Keep track of mode(i.e how many rounds)\n      type: types[0],\n      // keep track of Computer type\n      round: null,\n      nextBest: \"\",\n      winner: \"\"\n    };\n\n    _this.startGame = function () {\n      var counter = 0;\n      var gameInterval = setInterval(function () {\n        counter++; //Play random for Computer\n\n        _this.setState({\n          computer: moves[Math.floor(Math.random() * moves.length)],\n          winner: \"\"\n        });\n\n        if (counter > 5) {\n          clearInterval(gameInterval);\n\n          _this.setState({\n            winner: _this.selectWinner()\n          });\n        }\n      }, 100);\n    };\n\n    _this.selectMode = function (mode) {\n      _this.setState({\n        mode: mode,\n        winner: \"\"\n      });\n    };\n\n    _this.selectWinner = function () {\n      var _this$state = _this.state,\n          player = _this$state.player,\n          computer = _this$state.computer;\n\n      if (player === computer) {\n        return \"It's a Draw!\";\n      } else if (player === \"rock\" && computer === \"scissors\" || player === \"scissors\" && computer === \"paper\" || player === \"paper\" && computer === \"rock\") {\n        return \"Player Wins!\";\n      } else {\n        return \"Computer Wins!\";\n      }\n    };\n\n    _this.selectMove = function (move) {\n      _this.setState({\n        player: move,\n        winner: \"\"\n      });\n    };\n\n    _this.selectNextBestMove = function () {\n      var _this$state2 = _this.state,\n          lastChoice = _this$state2.lastChoice,\n          nextBest = _this$state2.nextBest;\n\n      switch (lastChoice) {\n        case 'rock':\n          return 'paper';\n\n        case 'paper':\n          return 'scissors';\n\n        case 'scissors':\n          return 'rock';\n\n        default:\n          return 'foo';\n        //play random\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          player = _this$state3.player,\n          computer = _this$state3.computer,\n          winner = _this$state3.winner;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, \"Rock Paper Scissors\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Player, {\n        move: player,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Player, {\n        move: computer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"moveBtn\",\n        onClick: function onClick() {\n          return _this2.selectMove(\"rock\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, \"rock\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"moveBtn\",\n        onClick: function onClick() {\n          return _this2.selectMove(\"paper\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, \"paper\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"moveBtn\",\n        onClick: function onClick() {\n          return _this2.selectMove(\"scissors\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }, \"scissor\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"winner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, winner ? this.selectWinner() : null), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.startGame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }, \"Start!\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["C:/Users/Ben/Desktop/RockPaperScissor(React)/rock-paper-scissors/src/index.js"],"names":["React","Component","ReactDOM","Player","moves","modes","types","App","state","player","computer","lastChoice","mode","type","round","nextBest","winner","startGame","counter","gameInterval","setInterval","setState","Math","floor","random","length","clearInterval","selectWinner","selectMode","selectMove","move","selectNextBestMove","textAlign","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Player from \"./player\";\nimport \"./styles.css\";\n\nconst moves = [\"rock\", \"paper\", \"scissors\"];\nconst modes = [\"bestOf3\", \"bestOf5\"];\nconst types = [\"random\", \"tactical\"];\n\nclass App extends Component {\n  state = { \n    player: moves[0], //Keep track of player selection\n    computer: moves[0], //Keep track of computer selection\n    lastChoice: moves[0], //Keep track of computer's last selection\n    mode: modes[0], // Keep track of mode(i.e how many rounds)\n    type: types[0], // keep track of Computer type\n    round:null,\n    nextBest:\"\",\n    winner: \"\"\n  };\n\n  startGame = () => {\n    let counter = 0;\n    let gameInterval = setInterval(() => {\n      counter++;\n      //Play random for Computer\n      this.setState({\n        computer: moves[Math.floor(Math.random() * moves.length)],\n        winner: \"\"\n      });\n      if (counter > 5) {\n        clearInterval(gameInterval);\n        this.setState({\n          winner: this.selectWinner()\n        });\n      }\n    }, 100);\n  };\n\n  //selectMode\n  selectMode = mode => {\n    this.setState({\n      mode: mode,\n      winner: \"\"\n    });\n  };\n  //selectType\n\n  selectWinner = () => {\n    const { player, computer } = this.state;\n\n    if (player === computer) {\n      return \"It's a Draw!\";\n    } else if (\n      (player === \"rock\" && computer === \"scissors\") ||\n      (player === \"scissors\" && computer === \"paper\") ||\n      (player === \"paper\" && computer === \"rock\")\n    ) {\n      return \"Player Wins!\";\n    } else {\n      return \"Computer Wins!\";\n    }\n  };\n  selectMove = move => {\n    this.setState({\n      player: move,\n      winner: \"\"\n    });\n  };\n  //selectNextBestMove\n  selectNextBestMove = () => {\n    const {  lastChoice, nextBest } = this.state;\n\n    switch(lastChoice) {\n      case 'rock':\n        return 'paper';\n      case 'paper':\n        return 'scissors';\n      case 'scissors':\n        return 'rock';\n      default:\n        return 'foo';//play random\n    }\n  };\n  render() {\n    const { player, computer, winner } = this.state;\n    return (\n      <>\n        <h1 style={{ textAlign: \"center\" }}>Rock Paper Scissors</h1>\n\n        <div>\n          <Player move={player} />\n          <Player move={computer} />\n        </div>\n        <div>\n          <button\n            className=\"moveBtn\"\n            onClick={() => this.selectMove(\"rock\")}\n          >\n            rock\n          </button>\n          <button\n            className=\"moveBtn\"\n            onClick={() => this.selectMove(\"paper\")}\n          >\n            paper\n          </button>\n          <button\n            className=\"moveBtn\"\n            onClick={() => this.selectMove(\"scissors\")}\n          >\n            scissor\n          </button>\n        </div>\n        <div className=\"winner\">{winner ? this.selectWinner() : null}</div>\n        <button type=\"button\" onClick={this.startGame}>\n          Start!\n        </button>\n      </>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}